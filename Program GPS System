/*********************************************************************
Logic Solution_GPS Hobby Electronics
Simple GPS System
Using Arduino Pro Mini + OLED display + GPS Module
*********************************************************************/

#include <SPI.h>                      //Serial Peripheral Interface (SPI) library for synchronous serial data protocol
#include <Wire.h>                     //Wire library used for I2C communication: Arduino Pro Mini pins used = A4 (SDA) and A5 (SCL)
#include <Adafruit_GFX.h>             //Adafruit graphic display library used for the OLED display
#include <Adafruit_SSD1306.h>         //Adafruit driver for OLED

#include <SoftwareSerial.h>           //SoftwareSerial library used to allow serial communication on other digital pins (i.e. Pins 3 & 4 for the this GPS project)
#include <TinyGPS.h>                  //GPS Library used to read the data from GPS Module

#define OLED_RESET 5
const unsigned char PROGMEM frame1 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x03, 0x87, 0x00, 0x00, 0x0E, 0x01, 0x80, 0x00, 0x0C, 0x00, 0xC0, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x30, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF4, 0x20, 0x38, 0x06, 0x3C, 0x78, 0x60, 0x0C, 0x1C, 0x1C, 0xC0, 0x08, 0x00, 0x02, 0xC0, 0x08, 0x00, 0x03, 0x80, 0x00, 0x0C, 0x03, 0x80, 0x0E, 0x0C, 0x01, 0xC0, 0x1C, 0x18, 0x03, 0xC0, 0x1F, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x02, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame2 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x03, 0x87, 0x00, 0x00, 0x0E, 0x01, 0x80, 0x00, 0x0C, 0x00, 0xC0, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x30, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF4, 0x20, 0x38, 0x06, 0x3C, 0x78, 0x60, 0x0C, 0x1C, 0x1C, 0xC0, 0x08, 0x00, 0x02, 0xC0, 0x08, 0x00, 0x03, 0x80, 0x00, 0x0C, 0x03, 0x80, 0x0E, 0x0C, 0x01, 0xC0, 0x1C, 0x18, 0x03, 0xC0, 0x1F, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x02, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame3 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x03, 0x87, 0x00, 0x00, 0x0E, 0x01, 0x80, 0x00, 0x0C, 0x00, 0xC0, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x30, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF4, 0x20, 0x38, 0x06, 0x3C, 0x78, 0x60, 0x0C, 0x1C, 0x1C, 0xC0, 0x08, 0x00, 0x02, 0xC0, 0x08, 0x00, 0x03, 0x80, 0x00, 0x0C, 0x03, 0x80, 0x0E, 0x0C, 0x01, 0xC0, 0x1C, 0x18, 0x03, 0xC0, 0x1F, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x02, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame4 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x07, 0x87, 0x00, 0x00, 0x06, 0x01, 0x80, 0x00, 0x0C, 0x00, 0xC0, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x38, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF0, 0x20, 0x38, 0x06, 0x3C, 0x78, 0x60, 0x0C, 0x1C, 0x1C, 0xC0, 0x08, 0x00, 0x06, 0xC0, 0x08, 0x00, 0x03, 0xC0, 0x00, 0x0C, 0x03, 0x80, 0x0E, 0x0C, 0x01, 0xC0, 0x0C, 0x18, 0x03, 0xC0, 0x0F, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x02, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame5 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x07, 0x03, 0x80, 0x00, 0x4C, 0x01, 0x80, 0x03, 0xFC, 0x00, 0xC0, 0x06, 0x38, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF0, 0x20, 0x38, 0x06, 0x30, 0x78, 0x70, 0x0C, 0x18, 0x1C, 0xC0, 0x08, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x0C, 0x03, 0xC0, 0x04, 0x0C, 0x01, 0xC0, 0x0C, 0x18, 0x03, 0xC0, 0x07, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x0C, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame6 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x03, 0x87, 0x00, 0x00, 0xE7, 0x01, 0x80, 0x03, 0xFE, 0x00, 0xC0, 0x06, 0x0C, 0x00, 0x40, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x20, 0x38, 0x06, 0x38, 0x70, 0x70, 0x0C, 0x18, 0x1C, 0x40, 0x00, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x0C, 0x0C, 0x03, 0xC0, 0x0C, 0x18, 0x03, 0x40, 0x07, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame7 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xF9, 0x83, 0x80, 0x03, 0xBF, 0x00, 0xC0, 0x06, 0x06, 0x00, 0xC0, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xF0, 0x60, 0x18, 0x06, 0x38, 0x30, 0x30, 0x04, 0x08, 0x3C, 0x60, 0x00, 0x0C, 0x06, 0x40, 0x00, 0x00, 0x02, 0xC0, 0x18, 0x00, 0x03, 0xC0, 0x0C, 0x00, 0x03, 0xC0, 0x0C, 0x18, 0x03, 0x60, 0x07, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame8 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3E, 0x00, 0x01, 0xFC, 0xFF, 0x80, 0x03, 0x8F, 0xC1, 0x80, 0x06, 0x03, 0x00, 0xC0, 0x06, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xF0, 0x60, 0x1C, 0x02, 0x38, 0x30, 0x30, 0x00, 0x08, 0x3C, 0x60, 0x08, 0x0C, 0x06, 0x40, 0x08, 0x0C, 0x02, 0xC0, 0x18, 0x00, 0x02, 0xC0, 0x0C, 0x00, 0x03, 0x40, 0x0C, 0x00, 0x02, 0x60, 0x07, 0xF0, 0x06, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame9 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x18, 0x00, 0x01, 0xFE, 0x7F, 0x00, 0x03, 0x83, 0xE3, 0x80, 0x06, 0x01, 0x80, 0xC0, 0x06, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x01, 0xF0, 0x60, 0x1C, 0x00, 0x38, 0x30, 0x30, 0x08, 0x08, 0x3C, 0x60, 0x18, 0x0C, 0x06, 0x60, 0x08, 0x0C, 0x06, 0x40, 0x18, 0x0C, 0x02, 0xC0, 0x0C, 0x0C, 0x03, 0x40, 0x0C, 0x00, 0x02, 0x60, 0x07, 0xC0, 0x06, 0x20, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame10 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x01, 0xEF, 0x3F, 0x00, 0x03, 0x03, 0xF7, 0x80, 0x06, 0x00, 0xC0, 0xC0, 0x06, 0x00, 0x80, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x70, 0x20, 0x1C, 0x06, 0x38, 0x70, 0x38, 0x0C, 0x08, 0x3C, 0x60, 0x18, 0x0C, 0x06, 0x60, 0x08, 0x0C, 0x06, 0x40, 0x18, 0x0C, 0x02, 0x40, 0x0C, 0x0C, 0x02, 0x40, 0x0C, 0x18, 0x02, 0x60, 0x07, 0x10, 0x06, 0x30, 0x01, 0x00, 0x0C, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame11 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x01, 0xC3, 0x0E, 0x00, 0x03, 0x01, 0xFF, 0x80, 0x06, 0x00, 0xE0, 0xC0, 0x06, 0x00, 0x40, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0x00, 0x20, 0x1C, 0x06, 0x18, 0x70, 0x38, 0x0C, 0x18, 0x3C, 0x60, 0x18, 0x0C, 0x04, 0x60, 0x08, 0x0C, 0x06, 0x40, 0x18, 0x0C, 0x06, 0x40, 0x0C, 0x0C, 0x02, 0x60, 0x0C, 0x18, 0x02, 0x60, 0x04, 0x70, 0x06, 0x30, 0x00, 0x60, 0x0C, 0x38, 0x00, 0x00, 0x1C, 0x0F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame12 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x01, 0x81, 0x82, 0x00, 0x03, 0x00, 0xFF, 0x80, 0x06, 0x00, 0x71, 0xC0, 0x06, 0x00, 0x20, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x20, 0x1C, 0x06, 0x00, 0x70, 0x38, 0x0C, 0x08, 0x38, 0x20, 0x18, 0x0C, 0x0C, 0x60, 0x08, 0x0C, 0x06, 0x60, 0x18, 0x0C, 0x06, 0x40, 0x08, 0x0C, 0x02, 0x60, 0x00, 0x18, 0x06, 0x60, 0x01, 0xF0, 0x06, 0x30, 0x01, 0xE0, 0x0C, 0x1C, 0x00, 0x00, 0x1C, 0x0F, 0xFF, 0xFF, 0xF0, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame13 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x01, 0xEF, 0x80, 0x00, 0x01, 0x81, 0xC0, 0x00, 0x03, 0x00, 0x7F, 0x80, 0x06, 0x00, 0x79, 0xC0, 0x06, 0x00, 0x20, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x20, 0x1C, 0x06, 0x20, 0x70, 0x38, 0x0C, 0x00, 0x38, 0x20, 0x08, 0x04, 0x0C, 0x60, 0x18, 0x0C, 0x06, 0x60, 0x08, 0x0C, 0x06, 0x40, 0x00, 0x0C, 0x02, 0x60, 0x00, 0x18, 0x06, 0x60, 0x03, 0xF0, 0x06, 0x30, 0x01, 0xE0, 0x0C, 0x1C, 0x00, 0x00, 0x1C, 0x0F, 0xFF, 0xFF, 0xF0, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame14 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x01, 0xC3, 0x80, 0x00, 0x03, 0x80, 0xE0, 0x00, 0x03, 0x00, 0x6F, 0x00, 0x06, 0x00, 0x3F, 0xC0, 0x06, 0x00, 0x30, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x20, 0x0C, 0x06, 0x38, 0x70, 0x38, 0x0C, 0x18, 0x38, 0x20, 0x08, 0x00, 0x0C, 0x60, 0x00, 0x00, 0x06, 0x60, 0x00, 0x08, 0x06, 0x60, 0x08, 0x0C, 0x06, 0x60, 0x0C, 0x18, 0x06, 0x20, 0x07, 0xF0, 0x06, 0x30, 0x01, 0xE0, 0x0C, 0x1C, 0x00, 0x00, 0x1C, 0x0F, 0xFF, 0xFF, 0xF0, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame15 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x01, 0xC0, 0xE0, 0x00, 0x03, 0x00, 0x60, 0x00, 0x03, 0x00, 0x36, 0x00, 0x06, 0x00, 0x1F, 0xC0, 0x06, 0x00, 0x18, 0xC0, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x20, 0x0C, 0x06, 0x38, 0x70, 0x18, 0x00, 0x18, 0x38, 0x20, 0x00, 0x0C, 0x0C, 0x60, 0x08, 0x04, 0x04, 0x60, 0x18, 0x00, 0x06, 0x60, 0x0C, 0x00, 0x06, 0x60, 0x0C, 0x10, 0x06, 0x20, 0x07, 0xF0, 0x06, 0x30, 0x01, 0xE0, 0x0C, 0x1C, 0x00, 0x00, 0x38, 0x0F, 0xFF, 0xFF, 0xF0, 0x01, 0x55, 0x55, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame16 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x01, 0xC3, 0xC0, 0x00, 0x03, 0x80, 0xC0, 0x00, 0x03, 0x00, 0x77, 0x00, 0x06, 0x00, 0x3F, 0xC0, 0x06, 0x00, 0x10, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x01, 0xF0, 0x20, 0x0C, 0x00, 0x38, 0x70, 0x38, 0x08, 0x08, 0x38, 0x20, 0x18, 0x0C, 0x0C, 0x60, 0x08, 0x0C, 0x06, 0x60, 0x18, 0x0C, 0x06, 0x60, 0x0C, 0x08, 0x06, 0x60, 0x0C, 0x00, 0x06, 0x20, 0x07, 0xC0, 0x06, 0x30, 0x01, 0xC0, 0x0C, 0x1C, 0x00, 0x00, 0x1C, 0x0F, 0xFF, 0xFF, 0xF0, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame17 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x01, 0xEF, 0x80, 0x00, 0x01, 0x81, 0xC0, 0x00, 0x03, 0x00, 0x7F, 0x80, 0x06, 0x00, 0x79, 0xC0, 0x06, 0x00, 0x20, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x70, 0x20, 0x1C, 0x04, 0x38, 0x70, 0x38, 0x0C, 0x08, 0x38, 0x20, 0x18, 0x0C, 0x0C, 0x60, 0x08, 0x0C, 0x06, 0x60, 0x18, 0x0C, 0x06, 0x40, 0x0C, 0x0C, 0x02, 0x60, 0x0E, 0x18, 0x06, 0x60, 0x07, 0x10, 0x06, 0x30, 0x01, 0x00, 0x0C, 0x1C, 0x00, 0x00, 0x1C, 0x0F, 0xFF, 0xFF, 0xF0, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame18 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x01, 0x83, 0x86, 0x00, 0x03, 0x00, 0xFF, 0x80, 0x06, 0x00, 0x70, 0xC0, 0x06, 0x00, 0x40, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0x00, 0x20, 0x1C, 0x06, 0x18, 0x70, 0x38, 0x0C, 0x18, 0x38, 0x60, 0x18, 0x0C, 0x04, 0x60, 0x08, 0x0C, 0x06, 0x60, 0x18, 0x0C, 0x06, 0x40, 0x0C, 0x0C, 0x02, 0x60, 0x0C, 0x18, 0x06, 0x60, 0x06, 0x70, 0x06, 0x30, 0x00, 0x20, 0x0C, 0x1C, 0x00, 0x00, 0x1C, 0x0F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame19 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x01, 0xC7, 0x1F, 0x00, 0x03, 0x01, 0xFB, 0x80, 0x06, 0x00, 0xE0, 0xC0, 0x06, 0x00, 0x40, 0x60, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xC0, 0x20, 0x1C, 0x06, 0x00, 0x70, 0x38, 0x0C, 0x08, 0x3C, 0x60, 0x18, 0x0C, 0x04, 0x60, 0x08, 0x0C, 0x06, 0x40, 0x18, 0x0C, 0x06, 0x40, 0x0C, 0x0C, 0x02, 0x40, 0x08, 0x18, 0x02, 0x60, 0x00, 0xF0, 0x06, 0x30, 0x01, 0xE0, 0x0C, 0x18, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame20 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x08, 0x00, 0x01, 0xFE, 0x3F, 0x00, 0x03, 0x03, 0xE3, 0x80, 0x06, 0x01, 0xC0, 0xC0, 0x06, 0x00, 0x80, 0x40, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x60, 0x1C, 0x06, 0x20, 0x30, 0x38, 0x0C, 0x00, 0x3C, 0x60, 0x08, 0x0C, 0x06, 0x60, 0x18, 0x0C, 0x06, 0xC0, 0x08, 0x0C, 0x02, 0x40, 0x00, 0x0C, 0x03, 0x40, 0x00, 0x18, 0x02, 0x60, 0x03, 0xF0, 0x06, 0x30, 0x01, 0xE0, 0x0C, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame21 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x3C, 0x00, 0x01, 0xFE, 0x7F, 0x00, 0x03, 0x87, 0xC1, 0x80, 0x06, 0x03, 0x80, 0xC0, 0x06, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x60, 0x1C, 0x06, 0x38, 0x30, 0x38, 0x0C, 0x00, 0x3C, 0x60, 0x18, 0x00, 0x06, 0x40, 0x08, 0x04, 0x06, 0x40, 0x00, 0x0C, 0x02, 0xC0, 0x00, 0x0C, 0x03, 0x40, 0x04, 0x18, 0x02, 0x60, 0x07, 0xF0, 0x06, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame22 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x20, 0xFE, 0x00, 0x01, 0xF8, 0xE3, 0x80, 0x03, 0x9F, 0x81, 0xC0, 0x06, 0x07, 0x00, 0xC0, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x60, 0x18, 0x06, 0x38, 0x30, 0x30, 0x0C, 0x18, 0x3C, 0x60, 0x08, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x03, 0x40, 0x00, 0x08, 0x02, 0xC0, 0x08, 0x0C, 0x03, 0xC0, 0x0C, 0x18, 0x03, 0x60, 0x07, 0xF0, 0x02, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame23 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x01, 0xEF, 0x00, 0x00, 0xF3, 0x01, 0x80, 0x03, 0xFE, 0x00, 0xC0, 0x06, 0x0E, 0x00, 0x40, 0x04, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x20, 0x38, 0x06, 0x38, 0x70, 0x30, 0x0C, 0x18, 0x1C, 0x40, 0x00, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x0C, 0x08, 0x03, 0xC0, 0x0C, 0x18, 0x03, 0x60, 0x07, 0xF0, 0x03, 0x60, 0x01, 0xE0, 0x06, 0x38, 0x00, 0x00, 0x1C, 0x1F, 0xFF, 0xFF, 0xF8, 0x02, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame24 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x03, 0x83, 0x80, 0x00, 0xE6, 0x01, 0x80, 0x03, 0xFC, 0x00, 0xC0, 0x06, 0x1C, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x03, 0xE0, 0x20, 0x38, 0x06, 0x38, 0x78, 0x70, 0x0C, 0x18, 0x1C, 0x40, 0x00, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x0C, 0x08, 0x01, 0xC0, 0x0C, 0x18, 0x03, 0x40, 0x07, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xF8, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame25 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x03, 0xCF, 0x00, 0x00, 0x06, 0x01, 0x80, 0x00, 0x0C, 0x01, 0x80, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x38, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xE0, 0x20, 0x38, 0x06, 0x38, 0x78, 0x60, 0x0C, 0x18, 0x1C, 0xC0, 0x08, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x08, 0x03, 0xC0, 0x0C, 0x0C, 0x01, 0xC0, 0x0C, 0x18, 0x03, 0xC0, 0x07, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x06, 0x38, 0x00, 0x00, 0x0C, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame26 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x07, 0x87, 0x00, 0x00, 0x06, 0x01, 0x80, 0x00, 0x0C, 0x00, 0xC0, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x38, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF0, 0x20, 0x38, 0x06, 0x3C, 0x78, 0x60, 0x0C, 0x1C, 0x1C, 0xC0, 0x18, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x0C, 0x03, 0x80, 0x0E, 0x0C, 0x01, 0xC0, 0x1C, 0x18, 0x03, 0xC0, 0x0F, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x02, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame27 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x03, 0x87, 0x00, 0x00, 0x0E, 0x01, 0x80, 0x00, 0x0C, 0x00, 0xC0, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x30, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF4, 0x20, 0x38, 0x06, 0x3C, 0x78, 0x60, 0x0C, 0x1C, 0x1C, 0xC0, 0x08, 0x00, 0x02, 0xC0, 0x08, 0x00, 0x03, 0x80, 0x00, 0x0C, 0x03, 0x80, 0x0E, 0x0C, 0x01, 0xC0, 0x1C, 0x18, 0x03, 0xC0, 0x1F, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x02, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char PROGMEM frame28 [] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x03, 0x87, 0x00, 0x00, 0x0E, 0x01, 0x80, 0x00, 0x0C, 0x00, 0xC0, 0x03, 0xF8, 0x00, 0xC0, 0x06, 0x30, 0x00, 0x40, 0x0C, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x60, 0x08, 0x03, 0xF4, 0x20, 0x38, 0x06, 0x3C, 0x78, 0x60, 0x0C, 0x1C, 0x1C, 0xC0, 0x08, 0x00, 0x02, 0xC0, 0x08, 0x00, 0x03, 0x80, 0x00, 0x0C, 0x03, 0x80, 0x0E, 0x0C, 0x01, 0xC0, 0x1C, 0x18, 0x03, 0xC0, 0x1F, 0xF0, 0x03, 0x60, 0x01, 0xC0, 0x02, 0x38, 0x00, 0x00, 0x0E, 0x1F, 0xFF, 0xFF, 0xFC, 0x05, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

Adafruit_SSD1306 display(OLED_RESET);

TinyGPS gps;                          //Create the TinyGPS object, giving it a name of your choice (here we use the name gps)
SoftwareSerial nss(3, 4);             //set sotfware serial communications to arduino ports 3 and 4 (TX = 3 and RX = 4)

void setup()   {                  
   nss.begin(9600);
  
  unsigned long age, date, time, chars = 0;

  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize the OLED and set the I2C address to 0x3C  
  
  display.clearDisplay();                //Clear display buffer.

  display.setTextSize(0.5);             //set text size to 2 (large) new 1
  display.setTextColor(WHITE);
  display.setCursor(0,0);               //set text start position to column=0 and row=0
  display.print(F("Logic Solution_GPS"));          //print "Logic Solution_GPS" to display
  //display.startscrollleft(0,0);
  //delay(5000);
  //display.stopscroll();
  //delay(1000);
   // display.startscrollright(0x00, 0x0F);
  
  //display.setTextSize(0.2);             //set text size to 1 (small)
  //display.setCursor(0,8);               //set text start position to column=0 and row=18
  //display.print("GPS SYSTEM");          //print "GPS SYSTEM" to display
  display.setTextSize(0.2);
  display.setCursor(0,8);                 //set text start position to column=0 and row=30
  display.setTextColor(BLACK, WHITE);     // 'inverted' text
  display.print("INITIALISING .....");    //print "INITIALISING ....." to display
  display.setCursor(0,16);                //set text start position to column=0 and row=40
  display.setTextColor(WHITE);            //
  display.print("Trying to locate GPS");  //print "Trying to locate GPS satellites ..." to display
  display.setCursor(0,24);                //set text start position to column=0 and row=57
  display.print("Please Wait...");        //print "Please Wait" to display
  //delay(8000);
  
display.display();
delay(5000);
display.clearDisplay();
display.setTextSize(0);
int tt=0;
int xx=40;
int yy=0;


display.clearDisplay();
display.drawBitmap(xx, yy,frame1,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame2,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame3,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame4,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame5,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame6,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame7,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame8,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame9,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame10,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame11,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame12,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame13,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame14,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame15,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame16,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame17,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame18,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame19,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame20,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame21,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame22,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame23,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame24,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame25,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame26,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame27,32,32, 1);
display.display();
delay(tt);

display.clearDisplay();
display.drawBitmap(xx, yy,frame28,32,32, 1);
display.display();
delay(tt);

//display.setFont();
//display.setTextColor(WHITE); 



  display.display();                  //update OLED with new display data
  delay(1000);                        //short delay
  display.clearDisplay();             //clear display
}


//MAIN PROGRAMME LOOP
void loop() {

bool newdata = false;
  unsigned long start = millis();
  while(millis() - start < 1000){    // Every 1 seconds we print an update
    if (feedgps())
      newdata = true;
  }
  if (newdata)
  { 
    gpsdump(gps);
  }
}
 
 
//PRINT GPS DATA TO OLED DISPLAY
void gpsdump(TinyGPS &gps)
{  
  print_date(gps);                  //print date and time at top of OLED display
  
  float flat, flon, falt;

  display.clearDisplay();
  
  display.setTextSize(1);           //set text size to 1
  display.setTextColor(WHITE);      //
  display.setCursor(0,0);           //set text start position for date and time (row = 0, column =0)
  print_date(gps);                  //prints date and time on top line to OLED
  
  gps.f_get_position(&flat, &flon); //retrieves latitude and longditude data
  display.setCursor(0,8);          //set text start position to column=0 and row=8
  display.print("Alti: ");         //print "Altitude" : to display
  display.println(gps.f_altitude());//print altitude data to display
  display.setCursor(73,8);         //set text start position to column=73 and row=8
  display.println("m");             //print "m" to display
  
  
  display.setCursor(0,16);          //set text start position to column=0 and row=16
  display.print("Lati: ");          //print "latitude :" to display
  display.println(flat,6);          //print latitude data to display up to 6 decimal places
  
  display.setCursor(0,24);          //set text start position to column=0 and row=24
  display.print("Long: ");          //print "longitude:" to display
  display.println(flon,6);          //print longitude data to display up to 6 decimal places
  //delay(2000); 
  //display.clearDisplay();
  
  display.setCursor(92,16);          //set text start position to column=92 and row=16
  display.print("Sat:");             //print "Sats    :" to display
  display.println(gps.satellites()); //print number of satellites detected to display
  //delay(1000); 
  //display.clearDisplay();
  display.setCursor(83,8);           //set text start position to column=83 and row=8
  display.print("Sp:");              //print "Speed    :" to display
  display.println(gps.f_speed_kmph());
  //display.setCursor(96,24);        //set text start position to column=96 and row=24
  //display.println("Km/h");
  
  display.display();                //update OLED display
}


//TEST FOR NEW DATA FROM THE GPS MODULE
bool feedgps()
{
  while (nss.available())
  {
    if (gps.encode(nss.read()))    //Each byte of NEMA data must be giving to TinyGPS by using encode(). True is returned when new data has been fully decoded and can be used
      return true;
  }
  return false;
} 


//GET DATE AND TIME FOR DISPLAY
static void print_date(TinyGPS &gps)
{
  int year;
  byte month, day, hour, minute, second, hundredths;
  unsigned long age;
  gps.crack_datetime(&year, &month, &day, &hour, &minute, &second);
  {
    char sz[32];
    sprintf(sz, "%02d/%02d/%02d %02d+7:%02d:%02d",
        day, month, year, hour, minute, second);//   "%02d/%02d/%02d  %02d:%02d:%02d", 
    display.print(sz);                      //Print date and time to OLED
    //display.startscrollleft(0,0);
    //delay(5000);
    //display.stopscroll();
  }

}
